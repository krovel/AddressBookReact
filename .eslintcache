[{"D:\\React\\address-book\\src\\index.js":"1","D:\\React\\address-book\\src\\reportWebVitals.js":"2","D:\\React\\address-book\\src\\App.js":"3","D:\\React\\address-book\\src\\components\\address-book-form\\address-book-form.jsx":"4","D:\\React\\address-book\\src\\services\\address-book-service.js":"5","D:\\React\\address-book\\src\\services\\axios-service.js":"6","D:\\React\\address-book\\src\\config\\config.js":"7","D:\\React\\address-book\\src\\components\\address-book-home\\address-book-home.jsx":"8","D:\\React\\address-book\\src\\components\\address-book-display\\display.jsx":"9"},{"size":500,"mtime":1608820766841,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1608820767043,"results":"12","hashOfConfig":"11"},{"size":638,"mtime":1608821952693,"results":"13","hashOfConfig":"11"},{"size":13668,"mtime":1608821565827,"results":"14","hashOfConfig":"11"},{"size":356,"mtime":1608821995777,"results":"15","hashOfConfig":"11"},{"size":682,"mtime":1608820768539,"results":"16","hashOfConfig":"11"},{"size":56,"mtime":1608820768381,"results":"17","hashOfConfig":"11"},{"size":2068,"mtime":1608820768235,"results":"18","hashOfConfig":"11"},{"size":1281,"mtime":1608820767843,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"e7j36p",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\address-book\\src\\index.js",[],["40","41"],"D:\\React\\address-book\\src\\reportWebVitals.js",[],"D:\\React\\address-book\\src\\App.js",[],"D:\\React\\address-book\\src\\components\\address-book-form\\address-book-form.jsx",["42","43"],"import React from 'react';\nimport './address-book-form.scss';\nimport logo from '../../assets/images/logo.png';\nimport cross from '../../assets/images/cross.png'\nimport {Link, withRouter} from 'react-router-dom';\nimport AddressBookService from '../../services/address-book-service'; \n\nconst initialState = {\n  fullName: '',\n  address: '',  \n  city: '',\n  state: '',\n  zip: '',\n  phoneNumber: '',\n\n  id: '',      \n  isUpdate: false,\n  isError: false,\n\n  error: {\n    fullName: '',\n    address: '',\n    city: '',\n    state: '',\n    zip: '',\n    phoneNumber: ''\n  },  \n  valid: {\n    fullName: '',\n    address: '',\n    city: '',\n    state: '',\n    zip: '',\n    phoneNumber: ''\n  }\n}\nclass AddressBookForm extends React.Component {\nconstructor(props) {\nsuper(props);\nthis.state = {\n  fullName: '',\n  address: '',\n  locationInfo: {\n    \"Andhra Pradesh\": [\"Amravati\", \"Chittoor\", \"Elluru\", \"Guntur\", \"Kadapa\", \"Kakinada\", \"Rajahmundry\", \"Vijayawada\", \"Visakhapatnam\"],\n    \"Bihar\": [\"Arrah\", \"Begusarai\", \"Bhagalpur\", \"Chhapra\", \"Darbhanga\", \"Gaya\", \"Muzaffarnagar\", \"Patna\"],\n    \"Madhya Pradesh\": [\"Bhopal\", \"Chitrakoot\", \"Indore\", \"Gwalior\", \"Jabalpur\", \"Satna\", \"Ujjain\"],\n    \"Gujarat\": [\"Ahmedabad\", \"Dwarka\", \"Gandhinagar\", \"Porbandar\", \"Rajkot\", \"Surat\", \"Vadodara\"],\n    \"Maharashtra\": [\"Ahmednagar\", \"Aurangabad\", \"Kolhapur\", \"Mumbai\", \"Nagpur\", \"Nashik\", \"Pune\", \"Thane\"],\n    \"Uttar Pradesh\": [\"Agra\", \"Aligarh\", \"Allahabad\", \"Bareilly\", \"Fatehpur\", \"Ghaziabad\", \"Hathras\", \"Kanpur\", \"Lucknow\", \"Noida\", \"Varanasi\"]\n  },\n  city: '',\n  state: '',\n  zip: '',\n  phoneNumber: '',\n\n  id: '',      \n  isUpdate: false,\n  isError: false,\n\n  error: {\n    fullName: '',\n    address: '',\n    city: '',\n    state: '',\n    zip: '',\n    phoneNumber: ''\n  },  \n  valid: {\n    fullName: '',\n    address: '',\n    city: '',\n    state: '',\n    zip: '',\n    phoneNumber: ''\n  }\n}\n    this.nameChangeHandler = this.nameChangeHandler.bind(this);\n    this.phoneNumberChangeHandler = this.phoneNumberChangeHandler.bind(this);\n    this.addressChangeHandler = this.addressChangeHandler.bind(this);\n    this.cityChangeHandler = this.cityChangeHandler.bind(this);\n    this.stateChangeHandler = this.stateChangeHandler.bind(this);\n    this.zipChangeHandler = this.zipChangeHandler.bind(this);\n  }\n  nameChangeHandler = (event) => {\n    this.setState({fullName: event.target.value});\n    this.checkName(event.target.value);\n  }\n  phoneNumberChangeHandler = (event) => {\n    this.setState({phoneNumber: event.target.value});\n    this.checkPhoneNumber(event.target.value);\n  }\n  addressChangeHandler = (event) => {\n    this.setState({address: event.target.value});\n    this.checkAddress(event.target.value);\n  }\n  cityChangeHandler = (event) => {\n    this.setState({city: event.target.value})\n    this.checkSelect('city', event.target.value);\n  }\n  stateChangeHandler = (event) => {\n    this.setState({state: event.target.value});\n    this.checkSelect('state', event.target.value);\n  }\n  zipChangeHandler = (event) => {\n    this.setState({zip: event.target.value});\n    this.checkZip(event.target.value);\n  }\n  initializeMessage = (field, errorMessage, validMessage) => {\n    this.setState(previousState => ({\n      error: {\n        ...previousState.error,\n        [field]: errorMessage\n      }\n    }));\n    this.setState(previousState => ({\n      valid: {\n        ...previousState.valid,\n        [field]: validMessage\n      }\n    }));\n  }\n  checkName = (nameValue) => {\n    if(nameValue.length === 0) {\n      this.initializeMessage('fullName', '', '');\n    } else {\n      const NAME_REGEX = RegExp(\"^[A-Z]{1}[a-z]{2,}([ ][A-Z]{1}[a-z]{2,})?$\");\n      if(NAME_REGEX.test(nameValue)) {\n        this.initializeMessage('fullName', '', '✓');\n      } else {\n        this.initializeMessage('fullName', 'Full Name is Invalid!', '');\n      }\n    }\n  }\n  checkPhoneNumber = (phoneNumberValue) => {\n    if(phoneNumberValue.length === 0) {\n      this.initializeMessage('phoneNumber', 'Phone Number is a Required Field!', '');\n    } else {\n      const PHONE_NUMBER_REGEX = RegExp(\"((^\\\\+?)(([0-9]{2,3})(\\\\s))?)[1-9]{1}[0-9]{9}$\");\n      if(PHONE_NUMBER_REGEX.test(phoneNumberValue)) {\n        this.initializeMessage('phoneNumber', '', '✓');\n      } else {\n        this.initializeMessage('phoneNumber', 'Phone Number is Invalid!', '');\n      }\n    }\n  }\n  checkAddress = (addressValue) => {\n    if(addressValue.length === 0) {\n      this.initializeMessage('address', 'Address is a Required Field!', '');\n    } else {\n      const PHONE_NUMBER_REGEX = RegExp(\"^[A-Za-z0-9-,\\\\.]{3,}([\\\\s][A-Za-z0-9-,\\\\.]{3,}){0,}$\");\n      if(PHONE_NUMBER_REGEX.test(addressValue)) {\n        this.initializeMessage('address', '', '✓');\n      } else {\n        this.initializeMessage('address', 'Address is Invalid!', '');\n      }\n    }\n  }\n  checkSelect = (field, fieldValue) => {\n    if(fieldValue.length === 0) {\n      this.initializeMessage(field, '✖', '');\n    } else {\n      this.initializeMessage(field, '', '✓');\n    }    \n  }\n  checkZip = (zipValue) => {\n    if(zipValue.length === 0) {\n      this.initializeMessage('zip', '✖', '');\n    } else {\n      const ZIP_CODE_REGEX = RegExp(\"^[1-9]{1}[0-9]{5}$\");\n      if(ZIP_CODE_REGEX.test(zipValue)) {\n        this.initializeMessage('zip', '', '✓');\n      } else {\n        this.initializeMessage('zip', '✖', '');\n      }\n    }\n  }\n\n  checkGlobalError = () =>{\n    if(this.state.error.fullName.length === 0 && this.state.error.address.length === 0 && this.state.error.city.length === 0 \n      && this.state.error.state.length === 0 && this.state.error.zip.length === 0 && this.state.error.phoneNumber.length === 0) {\n        this.setState({isError: false});\n      } else {\n        this.setState({isError: true});\n      }\n  }\n\n  checkValidations = async () => {\n    await this.checkName(this.state.fullName);\n    await this.checkAddress(this.state.address);\n    await this.checkSelect('city',this.state.city);\n    await this.checkSelect('state',this.state.state);\n    await this.checkZip(this.state.zip);\n    await this.checkPhoneNumber(this.state.phoneNumber);\n    await this.checkGlobalError();\n    return (this.state.isError);\n  }\n  save = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    saveOperation: {         \n      if(await this.checkValidations()) {\n        let errorLog = JSON.stringify(this.state.error);\n        alert(\"Error Occured while Submitting the Form ==> ERROR LOG : \" + errorLog);\n        break saveOperation;\n      }    \n      let contactObject = {\n        id: this.state.id,\n        fullName: this.state.fullName,\n        address: this.state.address,\n        city: this.state.city,\n        state: this.state.state,\n        zip: this.state.zip,\n        phoneNumber: this.state.phoneNumber\n      }\n      new AddressBookService().addContact(contactObject)\n      .then(responseDTO => {\n        let responseText = responseDTO.data;\n        alert(\"Contact Added Successfully!!!\\n\" + JSON.stringify(responseText.data));\n        this.reset();\n      }).catch(error => {\n        console.log(\"Error while adding Contact!!!\\n\" + JSON.stringify(error));\n      });\n      this.reset();\n    }\n  }\n\n  reset = () => {\n    this.setState({...initialState});\n  }\n\n  render () {\n    return (\n      <div className=\"body\">\n        <header className=\"headerContainer header\">\n            <div className=\"logoContainer\">\n                <img src={logo} alt=\"\" />\n                <div>\n                    <span className=\"address-text\">ADDRESS</span><br />\n                    <span className=\"address-text book-text\">BOOK</span>\n                </div>\n            </div>\n        </header>\n        <div className=\"form-content\">\n            <form className=\"form\" action=\"#\" onSubmit={this.save} onReset={this.reset}>\n                <div className=\"form-head\">\n                    <div className=\"form-text\">Person Address Form</div>\n                    <div>\n                        <Link to=''><img className=\"cancel-img\" src={cross} alt=\"\" /></Link>\n                    </div>\n                </div>\n                <div className=\"row-content\">\n                    <label htmlFor=\"full-name\" className=\"label text\">Full Name</label>\n                    <div className=\"validity-check\">\n                        <input className=\"input\" value={this.state.fullName} onChange={this.nameChangeHandler} type=\"text\" id=\"full-name\" name=\"full-name\" required />\n                        <valid-message className=\"valid-full-name\" htmlFor=\"full-name\">{this.state.valid.fullName}</valid-message>\n                        <error-output className=\"full-name-error\" htmlFor=\"full-name\">{this.state.error.fullName}</error-output>\n                    </div>\n                </div>\n                <div className=\"row-content\">\n                    <label htmlFor=\"tel\" className=\"label text\">Phone Number</label>\n                    <div className=\"validity-check\">\n                        <input className=\"input\" value={this.state.phoneNumber} onChange={this.phoneNumberChangeHandler} type=\"tel\" id=\"tel\" name=\"tel\" />\n                        <valid-message className=\"valid-tel\" htmlFor=\"tel\">{this.state.valid.phoneNumber}</valid-message>\n                        <error-output className=\"tel-error\" htmlFor=\"tel\">{this.state.error.phoneNumber}</error-output>\n                    </div>\n                </div>\n                <div className=\"row-content\">\n                    <label htmlFor=\"address\" className=\"label text\">Address</label>\n                    <div className=\"validity-check\">\n                        <textarea className=\"input text\" value={this.state.address} onChange={this.addressChangeHandler} name=\"address\" id=\"address\" style={{height: \"100px\"}} ></textarea>\n                        <valid-message className=\"valid-address\" htmlFor=\"address\">{this.state.valid.address}</valid-message>\n                        <error-output className=\"address-error\" htmlFor=\"address\">{this.state.error.address}</error-output>\n                    </div>\n                </div>\n                <div className=\"select-elements\">\n                    <div name=\"select-city\" id=\"select-city\" className=\"select-div\">\n                        <label htmlFor=\"city\" className=\"label text\">City</label>\n                        <div className=\"validity-check\">\n                          <select name=\"city\" id=\"city\" value={this.state.city} onChange={this.cityChangeHandler}>\n                            <option value=\"\" disabled selected hidden>Select City</option>\n                            <option value=\"Aurangabad\">Aurangabad</option>\n                            <option value=\"Bhopal\">Bhopal</option>\n                            <option value=\"Chhapra\">Chhapra</option>\n                            <option value=\"Lucknow\">Lucknow</option>\n                            <option value=\"Mumbai\">Mumbai</option>\n                            <option value=\"Nagpur\">Nagpur</option>\n                            <option value=\"Vadodra\">Vadodra</option>\n                          </select>\n                          <valid-message className=\"valid-city\" htmlFor=\"city\">{this.state.valid.city}</valid-message>\n                          <error-output className=\"city-error\" htmlFor=\"city\">{this.state.error.city}</error-output>\n                        </div>\n                    </div>\n                    <div name=\"select-state\" id=\"select-state\" className=\"select-div\">\n                        <label htmlFor=\"state\" className=\"label text\">State</label>\n                        <div className=\"validity-check\">\n                          <select name=\"state\" id=\"state\" value={this.state.state} onChange={this.stateChangeHandler}>\n                            <option value=\"\" disabled selected hidden>Select State</option>\n                            <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\n                            <option value=\"Bihar\">Bihar</option>\n                            <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\n                            <option value=\"Maharashtra\">Maharashtra</option>\n                            <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\n                            <option value=\"Gujarat\">Gujarat</option>\n                          </select>\n                          <valid-message className=\"valid-state\" htmlFor=\"state\">{this.state.valid.state}</valid-message>\n                          <error-output className=\"state-error\" htmlFor=\"state\">{this.state.error.state}</error-output>\n                        </div>\n                    </div>\n                    <div name=\"select-zip\" id=\"select-zip\" className=\"select-div\">\n                        <label htmlFor=\"zip\" className=\"label text\">Zip Code</label>\n                        <div className=\"validity-check\">\n                          <input className=\"input\" type=\"postal\" id=\"zip\"  value={this.state.zip} onChange={this.zipChangeHandler} />                          \n                          <valid-message className=\"valid-zip\" htmlFor=\"zip\">{this.state.valid.zip}</valid-message>\n                          <error-output className=\"zip-error\" htmlFor=\"zip\">{this.state.error.zip}</error-output>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"buttonParent\">\n                    <div className=\"submit-reset\">\n                        <button type=\"submit\" className=\"button submitButton\">Add</button>\n                        <button type=\"reset\" className=\"resetButton button\">Reset</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AddressBookForm);","D:\\React\\address-book\\src\\services\\address-book-service.js",[],"D:\\React\\address-book\\src\\services\\axios-service.js",[],"D:\\React\\address-book\\src\\config\\config.js",[],"D:\\React\\address-book\\src\\components\\address-book-home\\address-book-home.jsx",[],"D:\\React\\address-book\\src\\components\\address-book-display\\display.jsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":201,"column":5,"nodeType":"50","messageId":"51","endLine":225,"endColumn":6},{"ruleId":"48","severity":1,"message":"52","line":205,"column":9,"nodeType":"53","messageId":"54","endLine":205,"endColumn":29},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","Unexpected label in break statement.","BreakStatement","unexpectedLabelInBreak","no-global-assign","no-unsafe-negation"]